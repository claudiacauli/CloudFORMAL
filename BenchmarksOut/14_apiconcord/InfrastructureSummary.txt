
Infrastructure: 14_apiconcord, includes StackSets: 
 - apiconcordStackSet 

	StackSet: apiconcordStackSet, includes Templates: 
		Template: projectResources
		 Parameters: 
			(projectname -> NoValue)
			(aws::stackid -> 111111)
			(aws::accountid -> 999999999999)
			(aws::partition -> aws)
			(aws::region -> us-east-1)
			(aws::urlsuffix -> .aws)
			(aws::stackname -> projectResources)
			(aws::notificationarns -> arn:aws:cnc:test:arn)
		 Resources: 
			Route53::RecordSet(reportdns)
			IAM::Group(accessgroup)
			IAM::ManagedPolicy(accesspolicy)
			CloudFront::Distribution(cloudfrontdistribution)

		Template: tokenAccess
		 Parameters: 
			(aws::stackid -> 111111)
			(aws::accountid -> 999999999999)
			(aws::partition -> aws)
			(environment -> staging)
			(aws::region -> us-east-1)
			(existingbucketname -> models-resources)
			(aws::urlsuffix -> .aws)
			(aws::stackname -> tokenAccess)
			(aws::notificationarns -> arn:aws:cnc:test:arn)
		 Resources: 
			IAM::User(tokenserviceuser)
			IAM::AccessKey(tokenservicekey)
			IAM::Role(tokenservicerole)
			IAM::Policy(tokenservicepolicy)
		 Outputs By ID: 
			(accesskey -> IAM::AccessKey(tokenservicekey))
			(secretkey -> tokenservicekey_attribute_secretaccesskey)
			(rolearn -> IAM::Role(tokenservicerole))

		Template: logIngester
		 Parameters: 
			(apidomain -> api.concordqa.org)
			(lambdazipbucket -> concord-devops)
			(aws::stackid -> 111111)
			(aws::accountid -> 999999999999)
			(dbuser -> master)
			(lambdazipfilename -> kinesis-to-rds.zip)
			(aws::partition -> aws)
			(vpcid -> vpc-9c9714f9)
			(environment -> staging)
			(aws::region -> us-east-1)
			(dbsubnetids -> subnet-3ad53106,subnet-00fc2949)
			(aws::urlsuffix -> .aws)
			(kinesisstreamshardcount -> 1)
			(apigatewaybasepath -> log)
			(dbsize -> 300)
			(aws::stackname -> logIngester)
			(aws::notificationarns -> arn:aws:cnc:test:arn)
			(alarmemail -> NoValue)
			(dbpassword -> NoValue)
		 Resources: 
			IAM::Role(apigatewaylogpostrequestrole)
			ApiGateway::Method(apigatewaylogpostrequest)
			ApiGateway::Stage(apigatewaystage)
			ApiGateway::Method(apigatewaylogoptionsrequest)
			IAM::Role(lambdaiamrole)
			Kinesis::Stream(kinesisstream)
			EC2::SecurityGroup(kinesistordslambdafunctionsecuritygroup)
			ApiGateway::Account(apigatewayaccount)
			SNS::Topic(alarmnotificationtopic)
			RDS::DBSubnetGroup(dbsubnetgroup)
			EC2::SecurityGroup(dbvpcsecuritygroup)
			RDS::DBParameterGroup(dbparametergroup)
			ApiGateway::RestApi(apigateway)
			ApiGateway::BasePathMapping(apigatewaymapping)
			RDS::DBInstance(dbinstance)
			IAM::Role(apigatewaycloudwatchlogsrole)
			ApiGateway::Deployment(apigatewaydeployment)
			ApiGateway::Resource(apigatewaylogresource)
			CloudWatch::Alarm(apigatewayerroralarm)
			CloudWatch::Alarm(apigatewaykinesislambdaerroralarm)
			Lambda::EventSourceMapping(kinesiseventsource)
			Lambda::Function(kinesistordslambdafunction)
			EC2::SecurityGroupIngress(kinesistordslambdafunctiondbingress)
		 Outputs By ID: 
			(rawingestionurl -> https://apigateway.execute-api.us-east-1.amazonaws.com/latest/logs)
			(niceingestionurl -> https://api.concordqa.org/log/logs)
			(rdsdatabaseurl -> postgres://master:dbpassword@dbinstance.endpoint.address/log_manager)
			(rdssecuritygroup -> EC2::SecurityGroup(dbvpcsecuritygroup))
		 Outputs By Export Name: 
			(logingester:rdssecuritygroup -> EC2::SecurityGroup(dbvpcsecuritygroup))

		Template: lara
		 Parameters: 
			(loggeruri -> //cc-log-manager.herokuapp.com/api/logs)
			(addfakeauthprovider -> NoValue)
			(reportserviceurl -> https://us-central1-report-service-dev.cloudfunctions.net/api)
			(modeljsonlisturl -> NoValue)
			(sslcertificatename -> NoValue)
			(laradockerimage -> NoValue)
			(learnstemsecret -> NoValue)
			(dbhost -> NoValue)
			(craterapikey -> NoValue)
			(seskey -> NoValue)
			(newreliclicensekey -> NoValue)
			(craterurl -> NoValue)
			(aws::partition -> aws)
			(assessmentportalsecret -> NoValue)
			(hostedzoneid -> NoValue)
			(environment -> qa)
			(dbpassword -> NoValue)
			(portalclientid -> authoring)
			(aws::urlsuffix -> .aws)
			(learnportalsecret -> NoValue)
			(sessecret -> NoValue)
			(aws::stackname -> lara)
			(learnstagingsecret -> NoValue)
			(aws::notificationarns -> arn:aws:cnc:test:arn)
			(craterpassword -> NoValue)
			(itsiportalsecret -> NoValue)
			(aws::stackid -> 111111)
			(itsitestsecret -> NoValue)
			(cloudwatchloggroup -> NoValue)
			(domainname -> NoValue)
			(aws::accountid -> 999999999999)
			(hasportalsecret -> NoValue)
			(minnumlarawebtasks -> NoValue)
			(rollbarskey -> NoValue)
			(railssecrettoken -> NoValue)
			(aws::region -> us-east-1)
			(labbookproviderurl -> NoValue)
			(clusterstackname -> NoValue)
			(newrelicappname -> NoValue)
			(databasesecuritygroupid -> NoValue)
			(reportservicetoken -> NoValue)
			(nestedtemplatesfolder -> https://s3.amazonaws.com/concord-devops/cloud-formation)
			(googleanalyticsaccount -> NoValue)
			(maxnumlarawebtasks -> NoValue)
		 Mappings: 
			(sslcertificatemap -> Map(star.concord.org -> Right(Map(id -> arn:aws:acm:us-east-1:612297603577:certificate/2b62511e-ccc8-434b-ba6c-a8c33bbd509e)), star.staging.concord.org -> Right(Map(id -> arn:aws:acm:us-east-1:612297603577:certificate/8297f3b1-eb86-4f91-8035-3fbd2c9f5560)), star.concordqa.org -> Right(Map(id -> arn:aws:acm:us-east-1:816253370536:certificate/7b8bb00e-7aa4-4b9f-a722-f49c828af83c))))
		 Conditions: 
			(addassessmentportal -> true)
			(additsitest -> true)
			(additsiportal -> true)
			(addlearnstaging -> true)
			(addfakeauthprovidercond -> false)
			(addhasportal -> true)
			(addlearnportal -> true)
			(addlearnstem -> true)
		 Resources: 
			ECS::TaskDefinition(workertaskdefinition)
			CloudFront::Distribution(cloudfrontdistribution)
			Logs::LogGroup(loggroup)
			ECS::TaskDefinition(apptaskdefinition)
			ECS::Service(workerservice)
			ElasticLoadBalancingV2::TargetGroup(apptargetgroup)
			ECS::Service(appservice)
			CloudFormation::Stack(workerscalingstack)
			CloudFormation::Stack(apploadbalancerstack)
			Route53::RecordSet(laradns)
			EC2::SecurityGroupIngress(dbingress)
			ElasticLoadBalancingV2::Listener(applistener80)
			CloudFormation::Stack(appscalingstack)
			ElasticLoadBalancingV2::Listener(applistener443)

		Template: apiconcordqaorg
		 Parameters: 
			(aws::stackid -> 111111)
			(aws::accountid -> 999999999999)
			(aws::partition -> aws)
			(aws::region -> us-east-1)
			(aws::urlsuffix -> .aws)
			(aws::stackname -> apiconcordqaorg)
			(aws::notificationarns -> arn:aws:cnc:test:arn)
		 Resources: 
			ApiGateway::DomainName(apigatewaydomain)
			Route53::RecordSet(apigatewaydnsrecord)
		 Outputs By ID: 
			(apidomainname -> ApiGateway::DomainName(apigatewaydomain))
			(apidistributiondomainname -> apigatewaydomain_attribute_distributiondomainname)

		Template: apiconcordorg
		 Parameters: 
			(aws::stackid -> 111111)
			(aws::accountid -> 999999999999)
			(aws::partition -> aws)
			(aws::region -> us-east-1)
			(aws::urlsuffix -> .aws)
			(aws::stackname -> apiconcordorg)
			(aws::notificationarns -> arn:aws:cnc:test:arn)
		 Resources: 
			ApiGateway::DomainName(apigatewaydomain)
			Route53::RecordSet(apigatewaydnsrecord)
		 Outputs By ID: 
			(apidomainname -> ApiGateway::DomainName(apigatewaydomain))
			(apidistributiondomainname -> apigatewaydomain_attribute_distributiondomainname)

		Template: s3folderaccess
		 Parameters: 
			(name -> NoValue)
			(aws::stackid -> 111111)
			(folderpath -> NoValue)
			(aws::partition -> aws)
			(aws::region -> us-east-1)
			(aws::urlsuffix -> .aws)
			(aws::stackname -> s3folderaccess)
			(aws::notificationarns -> arn:aws:cnc:test:arn)
			(aws::accountid -> 999999999999)
			(s3bucket -> NoValue)
		 Resources: 
			IAM::Group(accessgroup)
			IAM::ManagedPolicy(accesspolicy)


