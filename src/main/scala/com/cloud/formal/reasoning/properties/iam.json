[
  {
    "ID": "12_EKM_SHARED_BY_MULTIPLE_POLICIES",
    "type": "FTT",
    "queryBuildType": "nominalProp",
    "requiredResourceTypes": ["iamuser","iampolicy"],
    "instQuery": "user",
    "propQuery": [
      "inverse policy_users min 2 policy"],
    "description": [
      "There might be IAM::Users shared by two or more policies"],
    "unsatPrint": [
      "Either there are no IAM::Users or there are some and they are certainly not",
      " shared by two or more policies"],
    "sat0print": [
      "There are IAM::Users - pointed by this template -",
      " that might be shared by two or more policies"],
    "sat1print": [
      "There is at least one IAM::User that is certainly",
      " shared by two or more policies"]
  }
,
  {
    "ID": "15_AKM_IAM_POLICIES_MUST_BE_ATTACHED_TO_SOMETHING",
    "type": "TFF",
    "queryBuildType": "nominalProp",
    "requiredResourceTypes": ["iampolicy","iamuser"],
    "instQuery": "policy",
    "propQuery": [
      "not (",
      "(policy_groups some group) or (policy_users some",
      " user) or (policy_roles some role) or ",
      "(inverse user_permissionsboundary some user) or",
      " (inverse role_permissionsboundary some role) or ",
      "(inverse role_policies some role)",
      ")"],
    "description": [
      "All IAM::Policys must be attached to something"],
    "unsatPrint": [
      "Either there are no IAM::Policys or they are all attached to something"],
    "sat0print": [
      "All IAM::Policy declared in the template are",
      " attached to something BUT there are referenced",
      " ones that might not be"],
    "sat1print": [
      "There is an IAM::Policy that is not attached",
      " to anything."]
  }
,
  {
    "ID": "34_AKM_POLICIES_ATTACHED_TO_GROUPS_ONLY",
    "type": "TFF",
    "queryBuildType": "nominalProp",
    "requiredResourceTypes": ["iampolicy","iamuser","iamgroup"],
    "instQuery": "policy",
    "propQuery": [
      "(policy_roles some role) or (policy_users some user) or ",
      "(inverse role_policies some role)"],
    "description": [
      "All IAM::Policies should be attached to groups (and not users or roles) for higher manageability"],
    "unsatPrint": [
      "Either there are no IAM::Policies or they are all attached to groups"],
    "sat0print": [
      "There are IAM::Policies that might be attached to users or roles"],
    "sat1print": [
      "There is at least one IAM::Policy attached to a user or group"]
  }
,
  {
    "ID": "35_AKM_GROUP_NO_USERS",
    "type": "TFF",
    "requiredResourceTypes": ["iamgroup","iamusertogroupaddition"],
    "instQuery": "group",
    "queryBuildType": "nominalProp",
    "propQuery": [
      "not (inverse usertogroupaddition_groupname some",
      " usertogroupaddition)"],
    "description": [
      "All IAM::Groups must be linked to some user"],
    "unsatPrint": [
      "All IAM::Groups - if any - are linked to some user"],
    "sat0print": [
      "There are IAM::Groups - pointed by this template -",
      " that might not be linked to any user"],
    "sat1print": [
      "There is at least one IAM::Group that is not",
      " linked to any user"]
  }
,
  {
    "ID": "36_AKM_USERS_PWDRESET",
    "type": "TFF",
    "queryBuildType": "nominalProp",
    "requiredResourceTypes": ["iamuser"],
    "instQuery": "user",
    "propQuery": [
      "not (user_loginprofile some (loginprofile_",
      "passwordresetrequired value false))"],
    "description": [
      "All known IAM::Users must have password",
      " reset required"],
    "unsatPrint": [
      "All known IAM::Users have password reset",
      " required"],
    "sat0print": [
      "All declared IAM::Users have password reset",
      " required but there are referenced users that might not"],
    "sat1print": [
      "There exists at least one declared IAM::User",
      " that does not have password reset required flag"]
  }
,
  {
    "ID": "37_EKM_USER_WITH_LOGINPROFILE",
    "type": "FTT",
    "requiredResourceTypes": ["iamuser"],
    "queryBuildType": "nominalProp",
    "instQuery": ["user"],
    "propQuery": [
      "(user_loginprofile some",
      " (loginprofile_password some xsd:string))"],
    "description": [
      "There might be IAM::Users with password passed",
      " (or written!) to the template"],
    "unsatPrint": [
      "Either there are no IAM::Users or they all have password",
      " in template"],
    "sat0print": [
      "There are referenced IAM::Users that might have password in template"],
    "sat1print": [
      "There exists at least one IAM::User that certainly has",
      " password in template"]
  }
,
  {
    "ID": "38_AKM_ACCESSKEY_ROTATING",
    "type": "TFF",
    "requiredResourceTypes": ["iamuser","iamaccesskey"],
    "queryBuildType": "nominalProp",
    "instQuery": ["user"],
    "propQuery": [
      "not (inverse accesskey_username some",
      " (accesskey_serial some xsd:int))"],
    "description": [
      "All IAM::Users should linked to",
      " a key that is rotating"],
    "unsatPrint": [
      "Either there are no IAM::Users or they are all linked to",
      " a key that is rotating"],
    "sat0print": [
      "There are referenced IAM::Users that might be",
      " linked to a key that is not rotating"],
    "sat1print": [
      "There is at least one declared IAM::User",
      " linked to a non-rotating access key"]
  }
,
  {
    "ID": "39_AKM_USER_ONE_ACCESSKEY",
    "type": "TFF",
    "requiredResourceTypes": ["iamuser","iamaccesskey"],
    "queryBuildType": "nominalProp",
    "instQuery": ["user"],
    "propQuery": [
      "(inverse accesskey_username min 2 accesskey)"],
    "description": ["All known IAM::Users must",
      " have max one access key"],
    "unsatPrint": ["All IAM::Users have max one",
      " access key"],
    "sat0print": ["All declared IAM::Users have max",
      " one access key - but there are referenced ones that might have more"],
    "sat1print": ["There exists at least one IAM::User",
      " with more than one access key"]
  }

]