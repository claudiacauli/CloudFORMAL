{
  "Resources": {
    "Images": {
      "Type": "AWS::S3::Bucket",
      "DependsOn": ["ThumbnailFunctionImageBucketPermission"],
      "Properties": {
        "NotificationConfiguration": {
          "LambdaConfigurations": [
            {
              "Function": {
                "Fn::GetAtt": [
                  "ThumbnailFunction", 
                  "Arn"
                ]
              }, 
              "Event": "s3:ObjectCreated:*"
            }
          ]
        }
      }
    },
    "ThumbnailFunctionRole": {
      "Type": "AWS::IAM::Role", 
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ], 
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17", 
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ], 
              "Effect": "Allow", 
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }, 
    "ThumbnailFunctionImageBucketPermission": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }, 
        "FunctionName": {
          "Ref": "ThumbnailFunction"
        }, 
        "Principal": "s3.amazonaws.com"
      }
    }, 
    "ThumbnailFunction": {
      "Type": "AWS::Lambda::Function", 
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "thumbnails.zip"
        }, 
        "Handler": "index.generate_thumbails", 
        "Role": {
          "Fn::GetAtt": [
            "ThumbnailFunctionRole", 
            "Arn"
          ]
        }, 
        "Runtime": "nodejs4.3", 
        "Tags": [
          {
            "Value": "SAM", 
            "Key": "lambda:createdBy"
          }
        ]
      }
    }, 
    "ServerlessRestApi": {
      "Type": "AWS::ApiGateway::RestApi", 
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0", 
            "title": {
              "Ref": "AWS::StackName"
            }
          }, 
          "paths": {
            "/add": {
              "post": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RestApiFunction.Arn}/invocations"
                  }
                }, 
                "responses": {}
              }
            }, 
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetHtmlFunction.Arn}/invocations"
                  }
                }, 
                "responses": {}
              }
            }, 
            "/getlist": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RestApiFunction.Arn}/invocations"
                  }
                }, 
                "responses": {}
              }
            }, 
            "/complete": {
              "post": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RestApiFunction.Arn}/invocations"
                  }
                }, 
                "responses": {}
              }
            }
          }, 
          "swagger": "2.0"
        }
      }
    }
  }
}