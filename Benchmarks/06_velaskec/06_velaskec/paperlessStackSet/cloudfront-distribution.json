{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "SNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "Publish S3 Bucket events here"
      }
    },
    "SNSPolicy": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "SNSTopic"
          }
        ],
        "PolicyDocument": {
          "Id": "TopicPolicy",
          "Version": "2012-10-17",
          "Statement": [{
            "Sid": "PublishOnly",
            "Effect": "Allow",
            "Principal": {
              "Service": "s3.amazonaws.com"
            },
            "Action": "sns:Publish",
            "Resource": {
              "Ref": "SNSTopic"
            },
            "Condition": {
              "StringEquals": {
                "AWS:SourceAccount": { "Ref": "AWS::AccountId" }
              },
              "ArnLike": {
                "AWS:SourceArn": "arn:aws:s3:::*"
              }
            }
          }]
        }
      }
    },
    "DefaultOrigin": {
      "Type": "AWS::S3::Bucket",
      "DependsOn": "SNSPolicy",
      "Properties": {
        "NotificationConfiguration": {
          "TopicConfigurations": [
            {
              "Topic": {
                "Ref": "SNSTopic"
              },
              "Event": "s3:ObjectCreated:*"
            }
          ]
        }
      }
    },
    "BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": { "Ref": "DefaultOrigin" },
        "PolicyDocument": {
          "Statement": [{
            "Action": [ "s3:GetObject" ],
            "Effect": "Allow",
            "Resource": { "Fn::Sub" : ["arn:aws:s3:::${Bucket}/*", { "Bucket": { "Ref": "DefaultOrigin" } } ]},
            "Principal":"*"
          }]
        }
      }
    },
    "CloudFront": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Enabled": "true",
          "HttpVersion": "http2",
          "PriceClass": "PriceClass_100",
          "DefaultRootObject": "index.html",
          "Origins": [{
            "DomainName": { "Fn::Sub": [ "${Bucket}.s3.amazonaws.com", { "Bucket": { "Ref": "DefaultOrigin" } } ] },
            "Id": { "Fn::Sub": [ "S3Origin-${Bucket}", { "Bucket": { "Ref": "DefaultOrigin" } } ] },
            "S3OriginConfig": {
              "OriginAccessIdentity": ""
            }
          }],
          "DefaultCacheBehavior": {
            "TargetOriginId": { "Fn::Sub": [ "S3Origin-${Bucket}", { "Bucket": { "Ref": "DefaultOrigin" } } ] },
            "ForwardedValues": {
              "QueryString": "false",
              "Cookies": {
                "Forward": "none"
              }
            },
            "ViewerProtocolPolicy": "allow-all"
          }
        }
      }
    },
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "LambdaPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "rs-lambda-execution",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:FilterLogEvents",
                "cloudfront:CreateInvalidation"
              ],
              "Resource": "*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "LambdaRole"
          }
        ]
      }
    },
    "Lambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "'use strict';",
                "const aws = require('aws-sdk');",
                "const cloudfront = new aws.CloudFront({apiVersion: '2016-09-29'});",
                "exports.handler = (event, context, callback) => {",
                " const s3Event = JSON.parse(event.Records[0].Sns.Message);",
                " if(s3Event.Records){ // Might be an s3:TestEvent when subscribe to the topic. No Records in this case",
 { "Fn::Sub": [ "   createInvalidation('${ID}', context.awsRequestId, s3Event.Records, (err) => {", { "ID": { "Ref": "CloudFront" } } ] },
                "     if (err) callback(err);",
                "     else callback();",
                "   });",
                " } else callback();",
                "};",
                "function createInvalidation(DistributionId, CallerReference, records, callback){",
                " let _items = records.map((rec) => {",
                "   return '/' + rec.s3.object.key;",
                " });",
                " let _params = {",
                "   DistributionId,",
                "   InvalidationBatch: {",
                "     CallerReference,",
                "     Paths: {",
                "       Quantity: _items.length,",
                "       Items: _items",
                "     }",
                "   }",
                " };",
                " cloudfront.createInvalidation(_params, (err, data) => {",
                " if (err) callback(err);",
                "   else callback();",
                " });",
                "}"
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs4.3",
        "Timeout": "60",
        "Role": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        }
      }
    },
    "InvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["Lambda", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": { "Ref" : "SNSTopic" }
      }
    },
    "SubscibeLambda": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "Lambda",
            "Arn"
          ]
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "SNSTopic"
        }
      }
    }
  },
  "Outputs": {
    "CloudFront": {
      "Value": {
        "Ref": "CloudFront"
      },
      "Export": {
        "Name": {
          "Ref": "AWS::StackName"
        }
      }
    },
    "SNSTopic": {
      "Value": {
        "Ref": "SNSTopic"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-sns"
        }
      }
    }
  }
}
