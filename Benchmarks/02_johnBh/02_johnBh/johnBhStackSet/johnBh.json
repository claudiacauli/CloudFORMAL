{
  "Resources": {

    "TranscodeLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "bh-lambdas",
          "S3Key": "BucketHeadTranscodeUploadLambda.py.zip"
        },
        "Description": "Get uploaded files from S3, call Elastic Transcoder",
        "Runtime": "python2.7",
        "Handler": "BucketHeadTranscodeUploadLambda.lambda_handler",
        "Role": "arn:aws:iam::402153944964:role/service-role/bhead-admin-role",
        "Timeout": 120
      }
    },
    
    "UpdateDynamoDbLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "bh-lambdas",
          "S3Key": "BucketHeadUpdateDynamoDbLambda.py.zip"
        },
        "Description": "Receive data from Elastic Transcode, update DynamoDB",
        "Runtime": "python2.7",
        "Handler": "BucketHeadUpdateDynamoDbLambda.lambda_handler",
        "Role": "arn:aws:iam::402153944964:role/service-role/bhead-admin-role",
        "Timeout": 120
      }
    },

    "UploadedFilesBucketPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties" : {
        "Action": "lambda:InvokeFunction",
        "FunctionName": { "Fn::GetAtt": [ "TranscodeLambda", "Arn" ]},
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {"Ref": "AWS::AccountId"},
        "SourceArn": { "Fn::Join": [":", [
            "arn", "aws", "s3", "" , "", {"Ref" : "UploadedFiles"}]]
        }
      }
    },
    
    "UploadedFiles": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "NotificationConfiguration": {
          "LambdaConfigurations": [
            {
              "Event" : "s3:ObjectCreated:*",
              "Function": {"Fn::GetAtt": ["TranscodeLambda", "Arn"]}
            }
          ]
        }
      }
    },
    
    "TranscodedFiles": {
      "Type": "AWS::S3::Bucket"
    },

    "TranscodingComplete": {
      "Type": "AWS::SNS::Topic",
      "Properties" : {
        "Subscription": [{
            "Protocol": "lambda",
            "Endpoint": {"Fn::GetAtt": ["TranscodeLambda", "Arn"]}
          }, {
            "Protocol": "email",
            "Endpoint": "john@fnnny.com"
          }]
      }
    },

    "TranscodingFailed": {
      "Type": "AWS::SNS::Topic",
      "Properties" : {
        "Subscription": [{
            "Protocol": "email",
            "Endpoint": "john@fnnny.com"
          }]
      }
    },
    
    "Videos": {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName": "VideoId",
            "AttributeType": "S"
          }
        ],
        "KeySchema" : [
          {
             "AttributeName": "VideoId",
             "KeyType": "HASH"
           }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        }

      }
    },
    
    "RestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "BucketHeadAPI",
        "Description": "API used for Greeting requests",
        "FailOnWarnings" : true
      }
    },
    
    "VideosResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {"Ref": "RestApi"},
        "ParentId": {"Fn::GetAtt": ["RestApi", "RootResourceId"]},
        "PathPart": "video"
      }
    },
    
    "VideosGetMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "RestApi" },
        "ResourceId": {"Ref": "VideosResource"},
        "MethodResponses": [{
          "StatusCode": 200
        }],
        "HttpMethod": "GET",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",  
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [ "",
             [
               "arn:aws:apigateway:",
               {"Ref": "AWS::Region"},
               "::",
               {"Ref": "RestApi"},
               ":/test/",
               {"Ref": "VideosResource"},
               "/*"
             ] 
            ]
          },    
          "IntegrationResponses": [{
            "StatusCode": 200
          }]
        }
      }
    }
  }
}
