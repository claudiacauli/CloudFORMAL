{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Dart web stack",
    "Parameters": {
        "IamInstanceProfile": { "Type": "String", "Description": "ASG LaunchConfiguration IamInstanceProfile" , "Default": "iamInstanceProfile9823"},
        "KeyName": { "Type": "String", "Description": "ASG LaunchConfiguration KeyName", "Default": "ASGKey34737" },
        "EcsAmiId": { "Type": "String", "Description": "ECS AMI ImageId" , "Default": "iamInstanceProfile9823"},
        "InstanceType": { "Type": "String", "Description": "ASG LaunchConfiguration InstanceType", "Default": "iamInstanceProfile9823" },
        "VpcId": { "Type": "String", "Description": "ASG SecurityGroup VpcId" , "Default": "iamInstanceProfile9823"},
        "FlaskWorkerDockerImage": { "Type": "String", "Description": "flask worker docker image", "Default": "di-3476s3"  },
        "NginxWorkerDockerImage": { "Type": "String", "Description": "nginx worker docker image", "Default": "di-3673"  },
        "CloudWatchLogsDockerImage": { "Type": "String", "Description": "cloudwatchlogs docker image" , "Default": "di-347673" },
        "DartConfig": { "Type": "String", "Description": "DART_CONFIG environment variable for the web app" ,"Default": "tre" },
        "DartWebVersion": { "Type": "String", "Description": "DART_WEB_VERSION environment variable for the web app", "Default": "dwssdad" },
        "AwsDefaultRegion": { "Type": "String", "Description": "AWS_DEFAULT_REGION environment variable for the web app", "Default": "us-west-1"  },
        "WebEcsServiceLoadBalancerName": { "Type": "String", "Description": "LoadBalancerName for ECS web service", "Default": "ecsServLoadBalancer" },
        "WebEcsServiceRoleName": { "Type": "String", "Description": "Role name for ECS web service ELB calls" ,"Default": "ecsServRole"}
    },
    "Resources": {
        "EcsCluster": {
            "Type": "AWS::ECS::Cluster"
        },
        "WebTaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "Volumes": [ { "Name": "ecs-agent-data", "Host": { "SourcePath": "/var/lib/ecs/data" } } ],
                "ContainerDefinitions": [
                    {
                        "Name": "dart-flask",
                        "Image": { "Ref": "FlaskWorkerDockerImage" },
                        "Cpu": 256,
                        "Memory": 1024,
                        "PortMappings": [ { "HostPort": 9191, "ContainerPort": 9191 } ],
                        "MountPoints": [ { "SourceVolume": "ecs-agent-data", "ContainerPath": "/mnt/ecs_agent_data", "ReadOnly": true } ],
                        "Environment": [
                            { "Name": "DART_ROLE", "Value": "web" },
                            { "Name": "DART_CONFIG", "Value": { "Ref": "DartConfig" } },
                            { "Name": "DART_WEB_VERSION", "Value": { "Ref": "DartWebVersion" } },
                            { "Name": "AWS_DEFAULT_REGION", "Value": { "Ref": "AwsDefaultRegion" } }
                        ]
                    },
                    {
                        "Name": "dart-nginx",
                        "Image": { "Ref": "NginxWorkerDockerImage" },
                        "Cpu": 256,
                        "Memory": 700,
                        "PortMappings": [ { "HostPort": 8080, "ContainerPort": 8080 } ],
                        "VolumesFrom": [ { "SourceContainer": "dart-flask" } ]
                    }
                ]
            }
        },
        "CloudWatchLogsTaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "Volumes": [ { "Name": "ecs-instance-logs", "Host": { "SourcePath": "/var/log" } } ],
                "ContainerDefinitions": [
                    {
                        "Name": "cloudwatchlogs",
                        "Image": { "Ref": "CloudWatchLogsDockerImage" },
                        "Cpu": 50,
                        "Memory": 64,
                        "PortMappings": [ { "HostPort": 9999, "ContainerPort": 9999 } ],
                        "MountPoints": [ { "SourceVolume": "ecs-instance-logs", "ContainerPath": "/mnt/ecs_instance_logs", "ReadOnly": true } ]
                    }
                ]
            }
        },
         "WebEcsService": {
            "Type": "AWS::ECS::Service",
            "Properties": {
                "Cluster": { "Ref": "EcsCluster" },
                "DesiredCount": 0,
                "LoadBalancers": [
                    {
                        "ContainerName": "dart-nginx",
                        "ContainerPort": 8080,
                        "LoadBalancerName": { "Ref": "WebEcsServiceLoadBalancerName" }
                    }
                ],
                "Role": { "Ref": "WebEcsServiceRoleName" },
                "TaskDefinition": { "Ref": "WebTaskDefinition" }
            }
        },
         "CloudWatchLogsEcsService": {
            "Type": "AWS::ECS::Service",
            "Properties": {
                "Cluster": { "Ref": "EcsCluster" },
                "DesiredCount": 0,
                "TaskDefinition": { "Ref": "CloudWatchLogsTaskDefinition" }
            }
        },
        "AutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": { "Ref": "LaunchConfiguration" },
                "VPCZoneIdentifier": ["vpc8"],
                "AvailabilityZones": ["us-west-1a","us-west-1b"],
                "MinSize": 2,
                "MaxSize": 5,
                "HealthCheckType": "ELB",
                "HealthCheckGracePeriod": 900,
                "LoadBalancerNames": [ { "Ref": "WebEcsServiceLoadBalancerName" } ],
                "Tags": [
                    { "Key": "dart:ecs-cluster", "Value": { "Ref": "EcsCluster" }, "PropagateAtLaunch": true },
                    { "Key": "dart:ecs-service-and-increment-1", "Value": { "Fn::Join": [ "|", [ { "Ref": "CloudWatchLogsEcsService" }, "1" ] ] }, "PropagateAtLaunch": true },
                    { "Key": "dart:ecs-service-and-increment-2", "Value": { "Fn::Join": [ "|", [ { "Ref": "WebEcsService" }, "1" ] ] }, "PropagateAtLaunch": true }
                ]
            }
        },
        "LaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "KeyName": { "Ref": "KeyName" },
                "ImageId": { "Ref": "EcsAmiId" },
                "AssociatePublicIpAddress": true,
                "SecurityGroups": [ { "Ref": "SecurityGroup" } ],
                "IamInstanceProfile": { "Ref": "IamInstanceProfile" },
                "InstanceType": { "Ref": "InstanceType" },
                "UserData": "{USER_DATA_CONTENTS}"
            }
        },
        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "dart web server security group",
                "VpcId": { "Ref": "VpcId" },
                "SecurityGroupIngress": [
                    { "IpProtocol": "tcp", "FromPort": 80, "ToPort": 8080, "CidrIp": "10.0.0.0/8" },
                    { "IpProtocol": "tcp", "FromPort": 80, "ToPort": 8080, "CidrIp": "172.16.0.0/12" },
                    { "IpProtocol": "tcp", "FromPort": 80, "ToPort": 8080, "CidrIp": "12.12.12.12/11" },
                    { "IpProtocol": "tcp", "FromPort": 80, "ToPort": 8080, "CidrIp": "13.13.13.13/12" },
                    { "IpProtocol": "tcp", "FromPort": 22, "ToPort": 22, "CidrIp": "10.0.0.0/8" },
                    { "IpProtocol": "tcp", "FromPort": 22, "ToPort": 22, "CidrIp": "172.16.0.0/12" },
                    { "IpProtocol": "tcp", "FromPort": 22, "ToPort": 22, "CidrIp": "12.12.12.12/11" },
                    { "IpProtocol": "tcp", "FromPort": 22, "ToPort": 22, "CidrIp": "13.13.13.13/12" }
                ]
            }
        },
        "ScaleUpPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": { "Ref": "AutoScalingGroup" },
                "Cooldown": 60,
                "ScalingAdjustment": 1
            }
        },
        "ScaleDownPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": { "Ref": "AutoScalingGroup" },
                "Cooldown": 60,
                "ScalingAdjustment": -1
            }
        },
        "CPUAlarmHigh": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": 300,
                "EvaluationPeriods": 2,
                "Threshold": 90,
                "AlarmActions": [ { "Ref": "ScaleUpPolicy" } ],
                "Dimensions": [ { "Name": "AutoScalingGroupName", "Value": { "Ref": "AutoScalingGroup" } } ],
                "ComparisonOperator": "GreaterThanThreshold"
            }
        },
        "CPUAlarmLow": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": 300,
                "EvaluationPeriods": 2,
                "Threshold": 70,
                "AlarmActions": [ { "Ref": "ScaleDownPolicy" } ],
                "Dimensions": [ { "Name": "AutoScalingGroupName", "Value": { "Ref": "AutoScalingGroup" } } ],
                "ComparisonOperator": "LessThanThreshold"
            }
        }
    },
    "Outputs" : {
        "EcsClusterResourceName" : {
            "Description": "The resource name of the ecs cluster",
            "Value" : { "Ref" : "EcsCluster" }
        },
        "WebEcsServiceResourceName" : {
            "Description": "The resource name of the web ecs service",
            "Value" : { "Ref" : "WebEcsService" }
        }
    }
}
